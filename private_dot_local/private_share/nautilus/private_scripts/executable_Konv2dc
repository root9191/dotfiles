#!/bin/bash

# Konfigurationsvariablen
SHOW_720P="false"

# Bitraten-Einstellungen
BITRATE_720P="10M"
BITRATE_1080P="30M"
BITRATE_ORIGINAL="30M"
BITRATE_AUDIO="128k"

# Buffer-Multiplikator für maximale Bitrate (typischerweise 2)
BUFFER_MULTIPLIER=2

echo "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | while read -r video; do
    [ -z "$video" ] && continue
    
    duration=$(ffprobe -i "$video" -show_entries format=duration -v quiet -of csv="p=0")
    duration=${duration%.*}
    
    # Auflösungsoptionen vorbereiten
    if [ "$SHOW_720P" = "true" ]; then
        resolution=$(zenity --list \
            --title="Auflösung wählen" \
            --text="In welcher Auflösung soll das Video gespeichert werden?" \
            --radiolist \
            --column="Auswahl" --column="Auflösung" \
            TRUE "Original" \
            FALSE "720p" \
            FALSE "1080p")
    else
        resolution=$(zenity --list \
            --title="Auflösung wählen" \
            --text="In welcher Auflösung soll das Video gespeichert werden?" \
            --radiolist \
            --column="Auswahl" --column="Auflösung" \
            TRUE "Original" \
            FALSE "1080p")
    fi
    
    # Resolution und Bitrate Parameter für ffmpeg
    case "$resolution" in
        "720p")
            res_params="-vf scale=1280:720"
            bitrate_params="-b:v $BITRATE_720P -maxrate $BITRATE_720P -bufsize $(echo "$BITRATE_720P * $BUFFER_MULTIPLIER" | bc)M"
            res_suffix="_720p"
            ;;
        "1080p")
            res_params="-vf scale=1920:1080"
            bitrate_params="-b:v $BITRATE_1080P -maxrate $BITRATE_1080P -bufsize $(echo "$BITRATE_1080P * $BUFFER_MULTIPLIER" | bc)M"
            res_suffix="_1080p"
            ;;
        *)
            res_params=""
            bitrate_params="-b:v $BITRATE_ORIGINAL -maxrate $BITRATE_ORIGINAL -bufsize $(echo "$BITRATE_ORIGINAL * $BUFFER_MULTIPLIER" | bc)M"
            res_suffix=""
            ;;
    esac
    
    # Die Schnittmethode-Auswahl
    cut_type=$(zenity --list \
        --title="Schnittmethode wählen" \
        --text="Wie möchten Sie das Video schneiden?" \
        --radiolist \
        --column="Auswahl" --column="Methode" \
        TRUE "Ganzes Video" \
        FALSE "Video halbieren" \
        FALSE "Prozent (Teilt das Video)" \
        FALSE "Sekunden (Anfang und Ende wegschneiden)")

    case "$cut_type" in
        "Ganzes Video")
            filename="${video%.*}${res_suffix}_dc.mp4"
            ffmpeg -hide_banner -loglevel error -y -i "$video" \
                $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename"
            ;;
        "Video halbieren")
            # Video automatisch bei 50% teilen
            split_point=$(echo "scale=2; $duration * 50 / 100" | bc)
            
            filename1="${video%.*}${res_suffix}_teil1.mp4"
            ffmpeg -hide_banner -loglevel error -y -i "$video" -t "$split_point" \
                $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename1"
            
            filename2="${video%.*}${res_suffix}_teil2.mp4"
            ffmpeg -hide_banner -loglevel error -y -ss "$split_point" -i "$video" \
                $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename2"
            ;;
        "Prozent (Teilt das Video)")
            percent=$(zenity --entry \
                --title="Prozent eingeben" \
                --text="An welcher Stelle soll das Video geteilt werden? (1-100)")
            
            if [ ! -z "$percent" ]; then
                split_point=$(echo "scale=2; $duration * $percent / 100" | bc)
                
                filename1="${video%.*}${res_suffix}_teil1.mp4"
                ffmpeg -hide_banner -loglevel error -y -i "$video" -t "$split_point" \
                    $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename1"
                
                filename2="${video%.*}${res_suffix}_teil2.mp4"
                ffmpeg -hide_banner -loglevel error -y -ss "$split_point" -i "$video" \
                    $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename2"
            fi
            ;;
        *)
            start_cut=$(zenity --entry \
                --title="Anfang wegschneiden" \
                --text="Wie viele Sekunden sollen am Anfang weggeschnitten werden?")
            
            end_cut=$(zenity --entry \
                --title="Ende wegschneiden" \
                --text="Wie viele Sekunden sollen am Ende weggeschnitten werden?")
            
            if [ ! -z "$start_cut" ] && [ ! -z "$end_cut" ]; then
                final_duration=$((duration - start_cut - end_cut))
                
                if [ $final_duration -le 0 ]; then
                    zenity --error --text="Fehler: Die Schnittzeiten sind länger als das Video selbst!"
                    continue
                fi
                
                filename="${video%.*}${res_suffix}_dc.mp4"
                ffmpeg -hide_banner -loglevel error -y -ss "$start_cut" -i "$video" -t "$final_duration" \
                    $res_params $bitrate_params -c:v libx264 -preset medium -c:a aac -b:a $BITRATE_AUDIO "$filename"
            fi
            ;;
    esac
done
