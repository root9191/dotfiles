fastfetch -c /home/lichti/.config/fastfetch/config.jsonc --logo-padding-top 5
#-l small

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /usr/share/cachyos-zsh-config/cachyos-config.zsh

export PATH="$PATH:/home/lichti/.local/bin"
eval "$(zoxide init zsh)"

# Set up fzf key bindings and fuzzy completion
eval "$(fzf --zsh)"


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias autoupdate='sudo /home/lichti/Dokumente/github/SystemCheck/system_check.sh -up'
alias backuplinux='sudo /home/lichti/Dokumente/github/BackupLinux/backup_extneu.sh'
alias syscheck='sudo /home/lichti/Dokumente/github/SystemCheck/system_check.sh'
alias sshrpi='ssh dietpi@rpi5'
alias vmnet='sudo systemctl start vmware-networks'
alias stopnc='sudo /home/lichti/Dokumente/github/tools/stopnc.sh'
alias supdate='echo "N" | autoupdate ; stopnc'
alias cat='bat'
alias ls='eza --icons --group-directories-first'
alias ll='eza --icons --group-directories-first -l'
alias start-docker='sudo systemctl start docker.service' 
alias stop-docker='sudo systemctl stop docker.service' 
alias status-docker='sudo systemctl status docker.service'
alias start-winapps='docker compose --file ~/.config/winapps/compose.yaml start'
alias stop-winapps='docker compose --file ~/.config/winapps/compose.yaml stop'
#export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh
#export PATH=/home/lichti/.local/bin:$PATH
alias ca='chezmoi add'
alias cdi='chezmoi diff'
alias capp='chezmoi apply'
alias cup='chezmoi update'
alias chezmoi='nocorrect chezmoi'
#alias git='nocorrect git'
alias autoclean='sudo paccache -vrk2'
#alias autoremove='sudo pacman -Rns $(pacman -Qtdqn)'
alias update-mirrorlist='sudo reflector --verbose --latest 10 --country "Austria" --protocol https --sort rate --save /etc/pacman.d/mirrorlist'
alias gnome-journal='journalctl -b0 _COMM=gnome-shell > ~/gnome-shell-log.txt'

# Funktion zum Entfernen verwaister Pakete
autoremove() {
  orphans=$(pacman -Qtdqn)
  if [[ -n "$orphans" ]]; then
    echo "Verwaiste Pakete gefunden. Entferne..."
    sudo pacman -Rns $orphans
  else
    echo "Keine verwaisten Pakete gefunden."
  fi
}

# Funktion fÃ¼r Debug Nvidia in Gnome
function debug-gnome() {
  # Create a completely fresh log file
  {
    echo "=== NVIDIA DRM Errors ==="
    journalctl -b | grep -i "flip event timeout"
    echo "=== NVIDIA VAAPI Errors ==="
    journalctl -b | grep -i "libva error"
    echo "=== GNOME Shell Crashes ==="
    journalctl -b | grep -i "gnome-shell" | grep -i "error\|fail\|crash"
    echo "=== Current NVIDIA Status ==="
    nvidia-smi
  } > ~/debug.log
  
  echo "Debug information saved to ~/debug.log"
}





# Added by LM Studio CLI (lms)
#export PATH="$PATH:/home/lichti/.cache/lm-studio/bin"
#export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/keyring/ssh"
#export GNOME_KEYRING_CONTROL="${XDG_RUNTIME_DIR}/keyring"
#export GNOME_KEYRING_PID

export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/gcr/ssh"

export PATH=$PATH:/home/lichti/.spicetify

export DOTNET_ROOT=$HOME/.dotnet
export PATH=$PATH:$DOTNET_ROOT
