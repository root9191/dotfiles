fastfetch -c /home/lichti/.config/fastfetch/config.jsonc --logo-padding-top 5
#-l small

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /usr/share/cachyos-zsh-config/cachyos-config.zsh

export PATH="$PATH:/home/lichti/.local/bin"
eval "$(zoxide init zsh)"

# Set up fzf key bindings and fuzzy completion
eval "$(fzf --zsh)"


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias sysmonupdate='/home/lichti/Dokumente/github/tools/Linux/copy_sysmon.sh'
alias autoupdate='sudo /home/lichti/Dokumente/github/SystemCheck/system_check.sh -up'
alias backuplinux='sudo /home/lichti/Dokumente/github/BackupLinux/backup_extneu.sh'
alias syscheck='sudo /home/lichti/Dokumente/github/SystemCheck/system_check.sh'
alias sshrpi='ssh dietpi@rpi5'
alias vmnet='sudo systemctl start vmware-networks'
alias stopnc='sudo /home/lichti/Dokumente/github/tools/pA/Programs/misc/stopnc.sh'
alias supdate='echo "N" | autoupdate ; stopnc'
alias cat='bat'
alias ls='eza --icons --group-directories-first'
alias ll='eza --icons --group-directories-first -l'
alias start-docker='sudo systemctl start docker.service' 
alias stop-docker='sudo systemctl stop docker.service' 
alias status-docker='sudo systemctl status docker.service'
alias start-winapps='docker compose --file ~/.config/winapps/compose.yaml start'
alias stop-winapps='docker compose --file ~/.config/winapps/compose.yaml stop'
#export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh
#export PATH=/home/lichti/.local/bin:$PATH
alias ca='chezmoi add'
alias cdi='chezmoi diff'
alias capp='chezmoi apply'
alias cup='chezmoi update'
alias chezmoi='nocorrect chezmoi'
#alias git='nocorrect git'
alias autoclean='sudo paccache -vrk2'
#alias autoremove='sudo pacman -Rns $(pacman -Qtdqn)'
alias update-mirrorlist='sudo reflector --verbose --latest 10 --country "Austria" --protocol https --sort rate --save /etc/pacman.d/mirrorlist'
alias gnome-journal='journalctl -b0 _COMM=gnome-shell > ~/gnome-shell-log.txt'
alias yayf="yay -Slq | fzf --multi --preview 'yay -Sii {1}' --preview-window=down:75% | xargs -ro yay -S"
#alias ll='ls -Fls'                # long listing format
alias rebootsafe='sudo shutdown -r now'

alias openports='netstat -nape --inet'

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'

# Alias's for archives
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'
alias untar='tar -xvf'
alias unbz2='tar -xvjf'
alias ungz='tar -xvzf'

# Show all logs in /var/log
alias logs="sudo find /var/log -type f -exec file {} \; | grep 'text' | cut -d' ' -f1 | sed -e's/:$//g' | grep -v '[0-9]$' | xargs tail -f"

# SHA1
alias sha1='openssl sha1'

alias clickpaste='sleep 3; xdotool type "$(xclip -o -selection clipboard)"'



# Funktion zum Entfernen verwaister Pakete
autoremove() {
  orphans=$(pacman -Qtdqn)
  if [[ -n "$orphans" ]]; then
    echo "Verwaiste Pakete gefunden. Entferne..."
    sudo pacman -Rns $orphans
  else
    echo "Keine verwaisten Pakete gefunden."
  fi
}

# Funktion fÃ¼r Debug Nvidia in Gnome
function debug-gnome() {
  # Create a completely fresh log file
  {
    echo "=== NVIDIA DRM Errors ==="
    journalctl -b | grep -i "flip event timeout"
    echo "=== NVIDIA VAAPI Errors ==="
    journalctl -b | grep -i "libva error"
    echo "=== GNOME Shell Crashes ==="
    journalctl -b | grep -i "gnome-shell" | grep -i "error\|fail\|crash"
    echo "=== Current NVIDIA Status ==="
    nvidia-smi
  } > ~/debug.log
  
  echo "Debug information saved to ~/debug.log"
}

# Copy file with a progress bar
cpp() {
    set -e
    strace -q -ewrite cp -- "${1}" "${2}" 2>&1 |
    awk '{
        count += $NF
        if (count % 10 == 0) {
            percent = count / total_size * 100
            printf "%3d%% [", percent
            for (i=0;i<=percent;i++)
                printf "="
            printf ">"
            for (i=percent;i<100;i++)
                printf " "
            printf "]\r"
        }
    }
    END { print "" }' total_size="$(stat -c '%s' "${1}")" count=0
}

# IP address lookup
alias whatismyip="whatsmyip"
function whatsmyip () {
    # Internal IP Lookup.
    if command -v ip &> /dev/null; then
        echo -n "Internal IP: "
        ip addr show wlan0 | grep "inet " | awk '{print $2}' | cut -d/ -f1
    else
        echo -n "Internal IP: "
        ifconfig wlan0 | grep "inet " | awk '{print $2}'
    fi

    # External IP Lookup
    echo -n "External IP: "
    curl -4 ifconfig.me
}





# Added by LM Studio CLI (lms)
#export PATH="$PATH:/home/lichti/.cache/lm-studio/bin"
#export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/keyring/ssh"
#export GNOME_KEYRING_CONTROL="${XDG_RUNTIME_DIR}/keyring"
#export GNOME_KEYRING_PID

export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/gcr/ssh"

export PATH=$PATH:/home/lichti/.spicetify

export DOTNET_ROOT=$HOME/.dotnet
export PATH=$PATH:$DOTNET_ROOT
